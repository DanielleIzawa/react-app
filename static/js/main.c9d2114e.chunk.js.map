{"version":3,"sources":["ListaDeUsuarios.jsx","index.jsx"],"names":["ListaDeUsuarios","useState","infos","setInfos","infosSearch","setInfosSearch","useEffect","axios","get","method","then","resposta","data","cards","card_number","cvv","expiry_date","abrirPagamento","setAbrirPagamento","pegarUsuario","setPegarUsuario","abrirPagou","setAbrirPagou","abrirNaoRecebeu","setAbrirNaoRecebeu","valorCartao","setValorCartao","valorDinheiro","setValorDinheiro","validarCampo","setValidarCampo","fecharModal","isPagamento","className","id","type","onChange","event","value","target","_new","filter","name","username","Object","values","join","includes","placeholder","map","item","key","index","src","img","alt","data-testid","onClick","style","display","thousandSeparator","prefix","inputmode","substr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9d2114e.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport './listadeusuarios.css';\r\n\r\n//Pegando as informações da API pelo GET\r\nconst ListaDeUsuarios = () => {\r\n    const [infos, setInfos] = useState([])\r\n    const [infosSearch, setInfosSearch] = useState([]); \r\n    useEffect(() => {\r\n        axios.get('https://www.mocky.io/v2/5d531c4f2e0000620081ddce', {\r\n            method: 'GET',\r\n        }).then((resposta) => {\r\n            setInfos(resposta.data)\r\n            setInfosSearch(resposta.data);\r\n        } )\r\n        \r\n    }, [])\r\n\r\n\r\n// Mock com lista de cartões para teste\r\nconst cards = [\r\n    // cartão válido\r\n    {\r\n      card_number: '1111111111111111',\r\n      cvv: 789,\r\n      expiry_date: '01/18',\r\n    },\r\n    // cartão inválido\r\n    {\r\n      card_number: '4111111111111234',\r\n      cvv: 123,\r\n      expiry_date: '01/20',\r\n    },\r\n];\r\n\r\n//filtro de busca de usuarios\r\nconst filter = (event) => {\r\n    const value = event.target.value;\r\n    const _new = infosSearch.filter(({ id, name, username }) =>\r\n      Object.values({ id, name, username }).join().includes(value)\r\n    );\r\n    setInfos(_new);\r\n  };\r\n\r\n\r\n// Função para pegar a escolha do cartão do input select\r\nconst escolhaDoCartao = (event) => {\r\n    setValorCartao(event.target.value);\r\n}\r\n\r\n// Ações dos modals\r\nconst [abrirPagamento, setAbrirPagamento] = useState(\"none\"); // Para abrir modal de Pagamento para\r\nconst [pegarUsuario, setPegarUsuario] = useState(\"\"); // Para pegar o nome do usuário\r\nconst [abrirPagou, setAbrirPagou] = useState(\"none\"); // Para abrir modal com recibo de pagamento\r\nconst [abrirNaoRecebeu, setAbrirNaoRecebeu] = useState(\"\"); // Para msg de erro de pagamento\r\nconst [valorCartao, setValorCartao] = useState(\"1\"); // Para pegar o cartão escolhido para pagamento\r\nconst [valorDinheiro, setValorDinheiro] = useState(\"\"); // Para pegar o valor de pagamento digitado\r\nconst [validarCampo, setValidarCampo] = useState(\"none\"); // Para validar campo de valor digitado\r\n\r\n// Função para abrir o modal de pagamento do usuário\r\nconst abrirModalPagar = (name) => {\r\n    setAbrirPagamento(\"flex\")\r\n    setPegarUsuario(name)\r\n}\r\n\r\n// Função que abre o modal de recibo de pagamento \r\nconst abrirModalPagou = () => {\r\n    if (valorDinheiro === \"\") {\r\n        setValidarCampo(\"flex\");\r\n    } else \r\n        {\r\n        if (valorCartao === \"1\") {\r\n            setAbrirNaoRecebeu(\"\");\r\n        } else {\r\n            setAbrirNaoRecebeu(\"não\");\r\n        }\r\n        setAbrirPagamento(\"none\");\r\n        setAbrirPagou(\"flex\");\r\n        setValorDinheiro(\"\");\r\n        setValidarCampo(\"none\");\r\n    }\r\n}\r\n\r\n// Função para fechar o modal do recibo de pagamento\r\nconst fecharModal = (isPagamento) => {\r\n    isPagamento ? setAbrirPagamento(\"none\") : setAbrirPagou(\"none\")\r\n}\r\n\r\n// Função para validar campo de valor para pagamento do usuário\r\nconst valorInput = (event) => {\r\n    setValorDinheiro(event.target.value);\r\n    setValidarCampo(\"none\");\r\n}\r\n\r\n\r\n// Renderizando na tela as informações recebidas da API \r\n    return (\r\n        <>  \r\n            <header>\r\n                <h1 className=\"titleList\">Lista de Usuários</h1>\r\n                <div id=\"divBusca\">\r\n                    <input \r\n                    type=\"text\" \r\n                    id=\"txtBusca\" \r\n                    onChange={filter} \r\n                    placeholder=\"Pesquisar usuário...\"/>\r\n                </div>\r\n            </header>\r\n            <section className='studentList'>\r\n                {infos.map(item => (\r\n                    <div className=\"container\" key={item.index}>\r\n                        <div className=\"content\">\r\n                            <img className=\"thumbnail\" src={item.img} alt=\"Foto do usuário\" />\r\n                            <div className=\"infos\">\r\n                                <p>{item.name}</p>\r\n                                <p>{/* {item.id} */} {item.username}</p>\r\n                            </div>\r\n                            <button data-testid=\"botao-pagar\" className=\"botao-pagar\" onClick={()=>{abrirModalPagar(item.name)}}>Pagar</button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </section>\r\n\r\n            {/*--------------------------------Abrir Modal de pagamento----------------------------------*/}\r\n            <div className=\"abrirModal\" style={{display: abrirPagamento}}>\r\n                <p className=\"texto-cabecalho-modal\">Pagamento para <span>{pegarUsuario}</span></p>\r\n                <div className=\"valorInput\">\r\n                <NumberFormat thousandSeparator={true} value={valorDinheiro} onChange={valorInput} prefix={'R$ '} inputmode=\"numeric\" placeholder=\"R$ 0,00\"/>\r\n                <p style={{display:validarCampo}}>Campo obrigatório</p>\r\n                </div>\r\n                <select value={valorCartao} onChange={escolhaDoCartao}>\r\n                <option value=\"1\">Cartão com final {cards[0].card_number.substr(-4)}</option>\r\n                <option value=\"2\">Cartão com final {cards[1].card_number.substr(-4)}</option>\r\n                </select>\r\n                <div className='buttonMaster'>\r\n                    <button onClick={()=>{abrirModalPagou ()}}>Pagar</button>\r\n                    <button className=\"cancel\" onClick={() => fecharModal(true) }  >Cancelar</button>\r\n                </div>\r\n            </div>  \r\n\r\n            {/*------------------------------Abrir Modal de recibo de pagamento--------------------------------*/}\r\n            <div className=\"abrirModal\" style={{display: abrirPagou}}>\r\n                <p className=\"texto-cabecalho-modal\">Recibo de pagamento</p>\r\n                <p>O Pagamento <b>{abrirNaoRecebeu}</b> foi concluído com sucesso</p>\r\n                <button onClick={() => fecharModal(false) }  >Fechar</button>\r\n            </div>\r\n            <div className=\"footer\"></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListaDeUsuarios","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ListaDeUsuarios from './ListaDeUsuarios';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ListaDeUsuarios />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}